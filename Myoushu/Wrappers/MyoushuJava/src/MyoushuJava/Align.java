/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class Align {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Align(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Align obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_Align(swigCPtr);
    }
    swigCPtr = 0;
  }

  public Align(Align.Enum _value) {
    this(MyoushuJNI.new_Align__SWIG_0(_value.swigValue()), true);
  }

  public Align() {
    this(MyoushuJNI.new_Align__SWIG_1(), true);
  }

  public Align(ALIGN_TYPE_OBSOLETE _value) {
    this(MyoushuJNI.new_Align__SWIG_2(_value.swigValue()), true);
  }

  public boolean isHCenter() {
    return MyoushuJNI.Align_isHCenter(swigCPtr, this);
  }

  public boolean isVCenter() {
    return MyoushuJNI.Align_isVCenter(swigCPtr, this);
  }

  public boolean isCenter() {
    return MyoushuJNI.Align_isCenter(swigCPtr, this);
  }

  public boolean isLeft() {
    return MyoushuJNI.Align_isLeft(swigCPtr, this);
  }

  public boolean isRight() {
    return MyoushuJNI.Align_isRight(swigCPtr, this);
  }

  public boolean isHStretch() {
    return MyoushuJNI.Align_isHStretch(swigCPtr, this);
  }

  public boolean isTop() {
    return MyoushuJNI.Align_isTop(swigCPtr, this);
  }

  public boolean isBottom() {
    return MyoushuJNI.Align_isBottom(swigCPtr, this);
  }

  public boolean isVStretch() {
    return MyoushuJNI.Align_isVStretch(swigCPtr, this);
  }

  public boolean isStretch() {
    return MyoushuJNI.Align_isStretch(swigCPtr, this);
  }

  public boolean isDefault() {
    return MyoushuJNI.Align_isDefault(swigCPtr, this);
  }

  public boolean isHRelative() {
    return MyoushuJNI.Align_isHRelative(swigCPtr, this);
  }

  public boolean isVRelative() {
    return MyoushuJNI.Align_isVRelative(swigCPtr, this);
  }

  public boolean isRelative() {
    return MyoushuJNI.Align_isRelative(swigCPtr, this);
  }

  public static Align parse(String _value) {
    return new Align(MyoushuJNI.Align_parse(_value), true);
  }

  public String print() {
    return MyoushuJNI.Align_print(swigCPtr, this);
  }

  public enum Enum {
    HCenter(MyoushuJNI.Align_HCenter_get()),
    VCenter(MyoushuJNI.Align_VCenter_get()),
    Center(MyoushuJNI.Align_Center_get()),
    Left(MyoushuJNI.Align_Left_get()),
    Right(MyoushuJNI.Align_Right_get()),
    HStretch(MyoushuJNI.Align_HStretch_get()),
    Top(MyoushuJNI.Align_Top_get()),
    Bottom(MyoushuJNI.Align_Bottom_get()),
    VStretch(MyoushuJNI.Align_VStretch_get()),
    Stretch(MyoushuJNI.Align_Stretch_get()),
    Default(MyoushuJNI.Align_Default_get()),
    HRelative(MyoushuJNI.Align_HRelative_get()),
    VRelative(MyoushuJNI.Align_VRelative_get()),
    Relative(MyoushuJNI.Align_Relative_get());

    public final int swigValue() {
      return swigValue;
    }

    public static Enum swigToEnum(int swigValue) {
      Enum[] swigValues = Enum.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (Enum swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + Enum.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private Enum() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private Enum(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private Enum(Enum swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
