/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class AnimationTaskMessage extends Message {
  private long swigCPtr;

  public AnimationTaskMessage(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGAnimationTaskMessageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(AnimationTaskMessage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_AnimationTaskMessage(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public AnimationTaskMessage() {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_0(), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, SWIGTYPE_p_Ogre__AnimationState animation, boolean loop, boolean restart, boolean playCounter) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_1(messageType.swigValue(), SWIGTYPE_p_Ogre__AnimationState.getCPtr(animation), loop, restart, playCounter), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, SWIGTYPE_p_Ogre__AnimationState animation, boolean loop, boolean restart) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_2(messageType.swigValue(), SWIGTYPE_p_Ogre__AnimationState.getCPtr(animation), loop, restart), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, SWIGTYPE_p_Ogre__AnimationState animation, boolean loop) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_3(messageType.swigValue(), SWIGTYPE_p_Ogre__AnimationState.getCPtr(animation), loop), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, SWIGTYPE_p_Ogre__AnimationState animation) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_4(messageType.swigValue(), SWIGTYPE_p_Ogre__AnimationState.getCPtr(animation)), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, Scene scene, String name, boolean loop, boolean restart, boolean playCounter) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_5(messageType.swigValue(), Scene.getCPtr(scene), scene, name, loop, restart, playCounter), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, Scene scene, String name, boolean loop, boolean restart) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_6(messageType.swigValue(), Scene.getCPtr(scene), scene, name, loop, restart), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, Scene scene, String name, boolean loop) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_7(messageType.swigValue(), Scene.getCPtr(scene), scene, name, loop), true);
  }

  public AnimationTaskMessage(AnimationTaskMessage.AnimationTaskMessageType messageType, Scene scene, String name) {
    this(MyoushuJNI.new_AnimationTaskMessage__SWIG_8(messageType.swigValue(), Scene.getCPtr(scene), scene, name), true);
  }

  public String getClassName() {
    return MyoushuJNI.AnimationTaskMessage_getClassName(swigCPtr, this);
  }

  public void clear() {
    MyoushuJNI.AnimationTaskMessage_clear(swigCPtr, this);
  }

  public void setMessageType(AnimationTaskMessage.AnimationTaskMessageType messageType) {
    MyoushuJNI.AnimationTaskMessage_setMessageType(swigCPtr, this, messageType.swigValue());
  }

  public AnimationTaskMessage.AnimationTaskMessageType getMessageType() {
    return AnimationTaskMessage.AnimationTaskMessageType.swigToEnum(MyoushuJNI.AnimationTaskMessage_getMessageType(swigCPtr, this));
  }

  public void setAnimation(SWIGTYPE_p_Ogre__AnimationState animation) {
    MyoushuJNI.AnimationTaskMessage_setAnimation__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__AnimationState.getCPtr(animation));
  }

  public void setAnimation(String name, Scene scene) {
    MyoushuJNI.AnimationTaskMessage_setAnimation__SWIG_1(swigCPtr, this, name, Scene.getCPtr(scene), scene);
  }

  public SWIGTYPE_p_Ogre__AnimationState getAnimation() {
    long cPtr = MyoushuJNI.AnimationTaskMessage_getAnimation(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__AnimationState(cPtr, false);
  }

  public void setLoop(boolean loop) {
    MyoushuJNI.AnimationTaskMessage_setLoop(swigCPtr, this, loop);
  }

  public boolean isLoop() {
    return MyoushuJNI.AnimationTaskMessage_isLoop(swigCPtr, this);
  }

  public void setRestart(boolean restart) {
    MyoushuJNI.AnimationTaskMessage_setRestart(swigCPtr, this, restart);
  }

  public boolean isRestart() {
    return MyoushuJNI.AnimationTaskMessage_isRestart(swigCPtr, this);
  }

  public void setPlayCounter(boolean playCounter) {
    MyoushuJNI.AnimationTaskMessage_setPlayCounter(swigCPtr, this, playCounter);
  }

  public boolean isPlayCounter() {
    return MyoushuJNI.AnimationTaskMessage_isPlayCounter(swigCPtr, this);
  }

  public void setStartCallback(FunctorBase pFunctor) {
    MyoushuJNI.AnimationTaskMessage_setStartCallback(swigCPtr, this, FunctorBase.getCPtr(pFunctor), pFunctor);
  }

  public void setStopCallback(FunctorBase pFunctor) {
    MyoushuJNI.AnimationTaskMessage_setStopCallback(swigCPtr, this, FunctorBase.getCPtr(pFunctor), pFunctor);
  }

  public FunctorBase getStartCallback() {
    long cPtr = MyoushuJNI.AnimationTaskMessage_getStartCallback(swigCPtr, this);
    return (cPtr == 0) ? null : new FunctorBase(cPtr, false);
  }

  public FunctorBase getStopCallback() {
    long cPtr = MyoushuJNI.AnimationTaskMessage_getStopCallback(swigCPtr, this);
    return (cPtr == 0) ? null : new FunctorBase(cPtr, false);
  }

  public enum AnimationTaskMessageType {
    AM_ENABLE,
    AM_DISABLE,
    AM_DISABLE_ALL;

    public final int swigValue() {
      return swigValue;
    }

    public static AnimationTaskMessageType swigToEnum(int swigValue) {
      AnimationTaskMessageType[] swigValues = AnimationTaskMessageType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (AnimationTaskMessageType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + AnimationTaskMessageType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private AnimationTaskMessageType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private AnimationTaskMessageType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private AnimationTaskMessageType(AnimationTaskMessageType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
