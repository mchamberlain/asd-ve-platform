/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class Camera extends Frustum {
  private long swigCPtr;

  public Camera(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGCameraUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Camera obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_Camera(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public Camera(String name, SWIGTYPE_p_Ogre__SceneManager sm) {
    this(MyoushuJNI.new_Camera(name, SWIGTYPE_p_Ogre__SceneManager.getCPtr(sm)), true);
  }

  public SWIGTYPE_p_Ogre__SceneManager getSceneManager() {
    long cPtr = MyoushuJNI.Camera_getSceneManager(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__SceneManager(cPtr, false);
  }

  public String getName() {
    return MyoushuJNI.Camera_getName(swigCPtr, this);
  }

  public void setPolygonMode(PolygonMode sd) {
    MyoushuJNI.Camera_setPolygonMode(swigCPtr, this, sd.swigValue());
  }

  public PolygonMode getPolygonMode() {
    return PolygonMode.swigToEnum(MyoushuJNI.Camera_getPolygonMode(swigCPtr, this));
  }

  public void setPosition(float x, float y, float z) {
    MyoushuJNI.Camera_setPosition__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void setPosition(Vector3 vec) {
    MyoushuJNI.Camera_setPosition__SWIG_1(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public Vector3 getPosition() {
    return new Vector3(MyoushuJNI.Camera_getPosition(swigCPtr, this), false);
  }

  public void move(Vector3 vec) {
    MyoushuJNI.Camera_move(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public void moveRelative(Vector3 vec) {
    MyoushuJNI.Camera_moveRelative(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public void setDirection(float x, float y, float z) {
    MyoushuJNI.Camera_setDirection__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void setDirection(Vector3 vec) {
    MyoushuJNI.Camera_setDirection__SWIG_1(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public Vector3 getDirection() {
    return new Vector3(MyoushuJNI.Camera_getDirection(swigCPtr, this), true);
  }

  public Vector3 getUp() {
    return new Vector3(MyoushuJNI.Camera_getUp(swigCPtr, this), true);
  }

  public Vector3 getRight() {
    return new Vector3(MyoushuJNI.Camera_getRight(swigCPtr, this), true);
  }

  public void lookAt(Vector3 targetPoint) {
    MyoushuJNI.Camera_lookAt__SWIG_0(swigCPtr, this, Vector3.getCPtr(targetPoint), targetPoint);
  }

  public void lookAt(float x, float y, float z) {
    MyoushuJNI.Camera_lookAt__SWIG_1(swigCPtr, this, x, y, z);
  }

  public void roll(Radian angle) {
    MyoushuJNI.Camera_roll(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public void yaw(Radian angle) {
    MyoushuJNI.Camera_yaw(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public void pitch(Radian angle) {
    MyoushuJNI.Camera_pitch(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public void rotate(Vector3 axis, Radian angle) {
    MyoushuJNI.Camera_rotate__SWIG_0(swigCPtr, this, Vector3.getCPtr(axis), axis, Radian.getCPtr(angle), angle);
  }

  public void rotate(Quaternion q) {
    MyoushuJNI.Camera_rotate__SWIG_1(swigCPtr, this, Quaternion.getCPtr(q), q);
  }

  public void setFixedYawAxis(boolean useFixed, Vector3 fixedAxis) {
    MyoushuJNI.Camera_setFixedYawAxis__SWIG_0(swigCPtr, this, useFixed, Vector3.getCPtr(fixedAxis), fixedAxis);
  }

  public void setFixedYawAxis(boolean useFixed) {
    MyoushuJNI.Camera_setFixedYawAxis__SWIG_1(swigCPtr, this, useFixed);
  }

  public Quaternion getOrientation() {
    return new Quaternion(MyoushuJNI.Camera_getOrientation(swigCPtr, this), false);
  }

  public void setOrientation(Quaternion q) {
    MyoushuJNI.Camera_setOrientation(swigCPtr, this, Quaternion.getCPtr(q), q);
  }

  public void _renderScene(Viewport vp, boolean includeOverlays) {
    MyoushuJNI.Camera__renderScene(swigCPtr, this, Viewport.getCPtr(vp), vp, includeOverlays);
  }

  public void _notifyRenderedFaces(long numfaces) {
    MyoushuJNI.Camera__notifyRenderedFaces(swigCPtr, this, numfaces);
  }

  public void _notifyRenderedBatches(long numbatches) {
    MyoushuJNI.Camera__notifyRenderedBatches(swigCPtr, this, numbatches);
  }

  public long _getNumRenderedFaces() {
    return MyoushuJNI.Camera__getNumRenderedFaces(swigCPtr, this);
  }

  public long _getNumRenderedBatches() {
    return MyoushuJNI.Camera__getNumRenderedBatches(swigCPtr, this);
  }

  public Quaternion getDerivedOrientation() {
    return new Quaternion(MyoushuJNI.Camera_getDerivedOrientation(swigCPtr, this), false);
  }

  public Vector3 getDerivedPosition() {
    return new Vector3(MyoushuJNI.Camera_getDerivedPosition(swigCPtr, this), false);
  }

  public Vector3 getDerivedDirection() {
    return new Vector3(MyoushuJNI.Camera_getDerivedDirection(swigCPtr, this), true);
  }

  public Vector3 getDerivedUp() {
    return new Vector3(MyoushuJNI.Camera_getDerivedUp(swigCPtr, this), true);
  }

  public Vector3 getDerivedRight() {
    return new Vector3(MyoushuJNI.Camera_getDerivedRight(swigCPtr, this), true);
  }

  public Quaternion getRealOrientation() {
    return new Quaternion(MyoushuJNI.Camera_getRealOrientation(swigCPtr, this), false);
  }

  public Vector3 getRealPosition() {
    return new Vector3(MyoushuJNI.Camera_getRealPosition(swigCPtr, this), false);
  }

  public Vector3 getRealDirection() {
    return new Vector3(MyoushuJNI.Camera_getRealDirection(swigCPtr, this), true);
  }

  public Vector3 getRealUp() {
    return new Vector3(MyoushuJNI.Camera_getRealUp(swigCPtr, this), true);
  }

  public Vector3 getRealRight() {
    return new Vector3(MyoushuJNI.Camera_getRealRight(swigCPtr, this), true);
  }

  public String getMovableType() {
    return MyoushuJNI.Camera_getMovableType(swigCPtr, this);
  }

  public void setAutoTracking(boolean enabled, SceneNode target, Vector3 offset) {
    MyoushuJNI.Camera_setAutoTracking__SWIG_0(swigCPtr, this, enabled, SceneNode.getCPtr(target), target, Vector3.getCPtr(offset), offset);
  }

  public void setAutoTracking(boolean enabled, SceneNode target) {
    MyoushuJNI.Camera_setAutoTracking__SWIG_1(swigCPtr, this, enabled, SceneNode.getCPtr(target), target);
  }

  public void setAutoTracking(boolean enabled) {
    MyoushuJNI.Camera_setAutoTracking__SWIG_2(swigCPtr, this, enabled);
  }

  public void setLodBias(float factor) {
    MyoushuJNI.Camera_setLodBias__SWIG_0(swigCPtr, this, factor);
  }

  public void setLodBias() {
    MyoushuJNI.Camera_setLodBias__SWIG_1(swigCPtr, this);
  }

  public float getLodBias() {
    return MyoushuJNI.Camera_getLodBias(swigCPtr, this);
  }

  public void setLodCamera(Camera lodCam) {
    MyoushuJNI.Camera_setLodCamera(swigCPtr, this, Camera.getCPtr(lodCam), lodCam);
  }

  public Camera getLodCamera() {
    long cPtr = MyoushuJNI.Camera_getLodCamera(swigCPtr, this);
    return (cPtr == 0) ? null : new Camera(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__Ray getCameraToViewportRay(float screenx, float screeny) {
    return new SWIGTYPE_p_Ogre__Ray(MyoushuJNI.Camera_getCameraToViewportRay__SWIG_0(swigCPtr, this, screenx, screeny), true);
  }

  public void getCameraToViewportRay(float screenx, float screeny, SWIGTYPE_p_Ogre__Ray outRay) {
    MyoushuJNI.Camera_getCameraToViewportRay__SWIG_1(swigCPtr, this, screenx, screeny, SWIGTYPE_p_Ogre__Ray.getCPtr(outRay));
  }

  public SWIGTYPE_p_Ogre__PlaneBoundedVolume getCameraToViewportBoxVolume(float screenLeft, float screenTop, float screenRight, float screenBottom, boolean includeFarPlane) {
    return new SWIGTYPE_p_Ogre__PlaneBoundedVolume(MyoushuJNI.Camera_getCameraToViewportBoxVolume__SWIG_0(swigCPtr, this, screenLeft, screenTop, screenRight, screenBottom, includeFarPlane), true);
  }

  public SWIGTYPE_p_Ogre__PlaneBoundedVolume getCameraToViewportBoxVolume(float screenLeft, float screenTop, float screenRight, float screenBottom) {
    return new SWIGTYPE_p_Ogre__PlaneBoundedVolume(MyoushuJNI.Camera_getCameraToViewportBoxVolume__SWIG_1(swigCPtr, this, screenLeft, screenTop, screenRight, screenBottom), true);
  }

  public void getCameraToViewportBoxVolume(float screenLeft, float screenTop, float screenRight, float screenBottom, SWIGTYPE_p_Ogre__PlaneBoundedVolume outVolume, boolean includeFarPlane) {
    MyoushuJNI.Camera_getCameraToViewportBoxVolume__SWIG_2(swigCPtr, this, screenLeft, screenTop, screenRight, screenBottom, SWIGTYPE_p_Ogre__PlaneBoundedVolume.getCPtr(outVolume), includeFarPlane);
  }

  public void getCameraToViewportBoxVolume(float screenLeft, float screenTop, float screenRight, float screenBottom, SWIGTYPE_p_Ogre__PlaneBoundedVolume outVolume) {
    MyoushuJNI.Camera_getCameraToViewportBoxVolume__SWIG_3(swigCPtr, this, screenLeft, screenTop, screenRight, screenBottom, SWIGTYPE_p_Ogre__PlaneBoundedVolume.getCPtr(outVolume));
  }

  public float _getLodBiasInverse() {
    return MyoushuJNI.Camera__getLodBiasInverse(swigCPtr, this);
  }

  public void _autoTrack() {
    MyoushuJNI.Camera__autoTrack(swigCPtr, this);
  }

  public void setWindow(float Left, float Top, float Right, float Bottom) {
    MyoushuJNI.Camera_setWindow(swigCPtr, this, Left, Top, Right, Bottom);
  }

  public void resetWindow() {
    MyoushuJNI.Camera_resetWindow(swigCPtr, this);
  }

  public boolean isWindowSet() {
    return MyoushuJNI.Camera_isWindowSet(swigCPtr, this);
  }

  public SWIGTYPE_p_std__vectorT_Ogre__Plane_t getWindowPlanes() {
    return new SWIGTYPE_p_std__vectorT_Ogre__Plane_t(MyoushuJNI.Camera_getWindowPlanes(swigCPtr, this), false);
  }

  public float getBoundingRadius() {
    return MyoushuJNI.Camera_getBoundingRadius(swigCPtr, this);
  }

  public SceneNode getAutoTrackTarget() {
    long cPtr = MyoushuJNI.Camera_getAutoTrackTarget(swigCPtr, this);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public Vector3 getAutoTrackOffset() {
    return new Vector3(MyoushuJNI.Camera_getAutoTrackOffset(swigCPtr, this), false);
  }

  public Viewport getViewport() {
    long cPtr = MyoushuJNI.Camera_getViewport(swigCPtr, this);
    return (cPtr == 0) ? null : new Viewport(cPtr, false);
  }

  public void _notifyViewport(Viewport viewport) {
    MyoushuJNI.Camera__notifyViewport(swigCPtr, this, Viewport.getCPtr(viewport), viewport);
  }

  public void setAutoAspectRatio(boolean autoratio) {
    MyoushuJNI.Camera_setAutoAspectRatio(swigCPtr, this, autoratio);
  }

  public boolean getAutoAspectRatio() {
    return MyoushuJNI.Camera_getAutoAspectRatio(swigCPtr, this);
  }

  public void setCullingFrustum(Frustum frustum) {
    MyoushuJNI.Camera_setCullingFrustum(swigCPtr, this, Frustum.getCPtr(frustum), frustum);
  }

  public Frustum getCullingFrustum() {
    long cPtr = MyoushuJNI.Camera_getCullingFrustum(swigCPtr, this);
    return (cPtr == 0) ? null : new Frustum(cPtr, false);
  }

  public void forwardIntersect(SWIGTYPE_p_Ogre__Plane worldPlane, SWIGTYPE_p_std__vectorT_Ogre__Vector4_t intersect3d) {
    MyoushuJNI.Camera_forwardIntersect(swigCPtr, this, SWIGTYPE_p_Ogre__Plane.getCPtr(worldPlane), SWIGTYPE_p_std__vectorT_Ogre__Vector4_t.getCPtr(intersect3d));
  }

  public boolean isVisible(SWIGTYPE_p_Ogre__AxisAlignedBox bound, SWIGTYPE_p_Ogre__FrustumPlane culledBy) {
    return MyoushuJNI.Camera_isVisible__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__AxisAlignedBox.getCPtr(bound), SWIGTYPE_p_Ogre__FrustumPlane.getCPtr(culledBy));
  }

  public boolean isVisible(SWIGTYPE_p_Ogre__AxisAlignedBox bound) {
    return MyoushuJNI.Camera_isVisible__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__AxisAlignedBox.getCPtr(bound));
  }

  public boolean isVisible(SWIGTYPE_p_Ogre__Sphere bound, SWIGTYPE_p_Ogre__FrustumPlane culledBy) {
    return MyoushuJNI.Camera_isVisible__SWIG_2(swigCPtr, this, SWIGTYPE_p_Ogre__Sphere.getCPtr(bound), SWIGTYPE_p_Ogre__FrustumPlane.getCPtr(culledBy));
  }

  public boolean isVisible(SWIGTYPE_p_Ogre__Sphere bound) {
    return MyoushuJNI.Camera_isVisible__SWIG_3(swigCPtr, this, SWIGTYPE_p_Ogre__Sphere.getCPtr(bound));
  }

  public boolean isVisible(Vector3 vert, SWIGTYPE_p_Ogre__FrustumPlane culledBy) {
    return MyoushuJNI.Camera_isVisible__SWIG_4(swigCPtr, this, Vector3.getCPtr(vert), vert, SWIGTYPE_p_Ogre__FrustumPlane.getCPtr(culledBy));
  }

  public boolean isVisible(Vector3 vert) {
    return MyoushuJNI.Camera_isVisible__SWIG_5(swigCPtr, this, Vector3.getCPtr(vert), vert);
  }

  public Vector3 getWorldSpaceCorners() {
    long cPtr = MyoushuJNI.Camera_getWorldSpaceCorners(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector3(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__Plane getFrustumPlane(int plane) {
    return new SWIGTYPE_p_Ogre__Plane(MyoushuJNI.Camera_getFrustumPlane(swigCPtr, this, plane), false);
  }

  public boolean projectSphere(SWIGTYPE_p_Ogre__Sphere sphere, SWIGTYPE_p_float left, SWIGTYPE_p_float top, SWIGTYPE_p_float right, SWIGTYPE_p_float bottom) {
    return MyoushuJNI.Camera_projectSphere(swigCPtr, this, SWIGTYPE_p_Ogre__Sphere.getCPtr(sphere), SWIGTYPE_p_float.getCPtr(left), SWIGTYPE_p_float.getCPtr(top), SWIGTYPE_p_float.getCPtr(right), SWIGTYPE_p_float.getCPtr(bottom));
  }

  public float getNearClipDistance() {
    return MyoushuJNI.Camera_getNearClipDistance(swigCPtr, this);
  }

  public float getFarClipDistance() {
    return MyoushuJNI.Camera_getFarClipDistance(swigCPtr, this);
  }

  public Matrix4 getViewMatrix() {
    return new Matrix4(MyoushuJNI.Camera_getViewMatrix__SWIG_0(swigCPtr, this), false);
  }

  public Matrix4 getViewMatrix(boolean ownFrustumOnly) {
    return new Matrix4(MyoushuJNI.Camera_getViewMatrix__SWIG_1(swigCPtr, this, ownFrustumOnly), false);
  }

  public void setUseRenderingDistance(boolean use) {
    MyoushuJNI.Camera_setUseRenderingDistance(swigCPtr, this, use);
  }

  public boolean getUseRenderingDistance() {
    return MyoushuJNI.Camera_getUseRenderingDistance(swigCPtr, this);
  }

  public void synchroniseBaseSettingsWith(Camera cam) {
    MyoushuJNI.Camera_synchroniseBaseSettingsWith(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public Vector3 getPositionForViewUpdate() {
    return new Vector3(MyoushuJNI.Camera_getPositionForViewUpdate(swigCPtr, this), false);
  }

  public Quaternion getOrientationForViewUpdate() {
    return new Quaternion(MyoushuJNI.Camera_getOrientationForViewUpdate(swigCPtr, this), false);
  }

}
