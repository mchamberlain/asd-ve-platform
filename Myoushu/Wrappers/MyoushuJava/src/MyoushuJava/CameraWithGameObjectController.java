/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class CameraWithGameObjectController extends MoveableObjectController {
  private long swigCPtr;

  public CameraWithGameObjectController(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGCameraWithGameObjectControllerUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(CameraWithGameObjectController obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MyoushuJNI.delete_CameraWithGameObjectController(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public CameraWithGameObjectController(String name, Camera pCamera, GameObject pGameObject) {
    this(MyoushuJNI.new_CameraWithGameObjectController(name, Camera.getCPtr(pCamera), pCamera, GameObject.getCPtr(pGameObject), pGameObject), true);
  }

  public String getClassName() {
    return MyoushuJNI.CameraWithGameObjectController_getClassName(swigCPtr, this);
  }

  public Camera getCamera() {
    long cPtr = MyoushuJNI.CameraWithGameObjectController_getCamera__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Camera(cPtr, false);
  }

  public void setCamera(Camera pCamera) {
    MyoushuJNI.CameraWithGameObjectController_setCamera(swigCPtr, this, Camera.getCPtr(pCamera), pCamera);
  }

  public GameObject getGameObject() {
    long cPtr = MyoushuJNI.CameraWithGameObjectController_getGameObject__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new GameObject(cPtr, false);
  }

  public void setGameObject(GameObject pGameObject) {
    MyoushuJNI.CameraWithGameObjectController_setGameObject(swigCPtr, this, GameObject.getCPtr(pGameObject), pGameObject);
  }

  public Vector3 getOffsetFromGameObjectCenter() {
    return new Vector3(MyoushuJNI.CameraWithGameObjectController_getOffsetFromGameObjectCenter(swigCPtr, this), true);
  }

  public void setOffsetFromGameObjectCenter(Vector3 offsetFromGameObjectCenter) {
    MyoushuJNI.CameraWithGameObjectController_setOffsetFromGameObjectCenter(swigCPtr, this, Vector3.getCPtr(offsetFromGameObjectCenter), offsetFromGameObjectCenter);
  }

  public float getDistanceFromObject() {
    return MyoushuJNI.CameraWithGameObjectController_getDistanceFromObject(swigCPtr, this);
  }

  public void setDistanceFromObject(float distanceFromObject) {
    MyoushuJNI.CameraWithGameObjectController_setDistanceFromObject(swigCPtr, this, distanceFromObject);
  }

  public Radian getMinAngleBetweenCamDirectionGameObjectUp() {
    return new Radian(MyoushuJNI.CameraWithGameObjectController_getMinAngleBetweenCamDirectionGameObjectUp(swigCPtr, this), true);
  }

  public void setMinAngleBetweenCamDirectionGameObjectUp(Radian angle) {
    MyoushuJNI.CameraWithGameObjectController_setMinAngleBetweenCamDirectionGameObjectUp(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public Radian getMaxAngleBetweenCamDirectionGameObjectUp() {
    return new Radian(MyoushuJNI.CameraWithGameObjectController_getMaxAngleBetweenCamDirectionGameObjectUp(swigCPtr, this), true);
  }

  public void setMaxAngleBetweenCamDirectionGameObjectUp(Radian angle) {
    MyoushuJNI.CameraWithGameObjectController_setMaxAngleBetweenCamDirectionGameObjectUp(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public void update(long timeDelta) {
    MyoushuJNI.CameraWithGameObjectController_update(swigCPtr, this, timeDelta);
  }

  public void bind(CameraWithGameObjectController.CameraAction cameraAction, String inputActionStr, int axis) {
    MyoushuJNI.CameraWithGameObjectController_bind__SWIG_0(swigCPtr, this, cameraAction.swigValue(), inputActionStr, axis);
  }

  public void bind(CameraWithGameObjectController.CameraAction cameraAction, String inputActionStr) {
    MyoushuJNI.CameraWithGameObjectController_bind__SWIG_1(swigCPtr, this, cameraAction.swigValue(), inputActionStr);
  }

  public boolean unBind(String inputActionStr) {
    return MyoushuJNI.CameraWithGameObjectController_unBind(swigCPtr, this, inputActionStr);
  }

  public void processInputAction(InputMessage message) {
    MyoushuJNI.CameraWithGameObjectController_processInputAction(swigCPtr, this, InputMessage.getCPtr(message), message);
  }

  public enum CameraAction {
    CA_UNKNOWN(MyoushuJNI.CameraWithGameObjectController_CA_UNKNOWN_get()),
    CA_PITCH,
    CA_YAW,
    CA_ROLL;

    public final int swigValue() {
      return swigValue;
    }

    public static CameraAction swigToEnum(int swigValue) {
      CameraAction[] swigValues = CameraAction.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (CameraAction swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + CameraAction.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private CameraAction() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private CameraAction(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private CameraAction(CameraAction swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
