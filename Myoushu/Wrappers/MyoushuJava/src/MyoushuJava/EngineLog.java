/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class EngineLog extends OutputStream {
  private long swigCPtr;

  public EngineLog(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGEngineLogUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(EngineLog obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_EngineLog(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public EngineLog(OutputStream secondaryStream) {
    this(MyoushuJNI.new_EngineLog__SWIG_0(OutputStream.getCPtr(secondaryStream), secondaryStream), true);
  }

  public EngineLog() {
    this(MyoushuJNI.new_EngineLog__SWIG_1(), true);
  }

  public void setSecondaryStream(OutputStream secondaryStream) {
    MyoushuJNI.EngineLog_setSecondaryStream(swigCPtr, this, OutputStream.getCPtr(secondaryStream), secondaryStream);
  }

  public EngineLog.LogMessageType getMessageType() {
    return EngineLog.LogMessageType.swigToEnum(MyoushuJNI.EngineLog_getMessageType(swigCPtr, this));
  }

  public void setMessageType(EngineLog.LogMessageType messageType) {
    MyoushuJNI.EngineLog_setMessageType(swigCPtr, this, messageType.swigValue());
  }

  public SWIGTYPE_p_Poco__RWLock getPublicLock() {
    return new SWIGTYPE_p_Poco__RWLock(MyoushuJNI.EngineLog_getPublicLock(swigCPtr, this), false);
  }

  public void messageStart(EngineLog.LogMessageType messageType) {
    MyoushuJNI.EngineLog_messageStart__SWIG_0(swigCPtr, this, messageType.swigValue());
  }

  public void messageStart() {
    MyoushuJNI.EngineLog_messageStart__SWIG_1(swigCPtr, this);
  }

  public void messageEnd() {
    MyoushuJNI.EngineLog_messageEnd(swigCPtr, this);
  }

  public enum LogMessageType {
    LM_INFO_ENGINE(MyoushuJNI.EngineLog_LM_INFO_ENGINE_get()),
    LM_INFO_APPLICATION,
    LM_WARNING,
    LM_ERROR;

    public final int swigValue() {
      return swigValue;
    }

    public static LogMessageType swigToEnum(int swigValue) {
      LogMessageType[] swigValues = LogMessageType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (LogMessageType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + LogMessageType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private LogMessageType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private LogMessageType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private LogMessageType(LogMessageType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
