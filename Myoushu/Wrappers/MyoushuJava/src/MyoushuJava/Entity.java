/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class Entity extends MovableObject {
  private long swigCPtr;

  public Entity(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGEntityUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Entity obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_Entity(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SWIGTYPE_p_Ogre__MeshPtr getMesh() {
    return new SWIGTYPE_p_Ogre__MeshPtr(MyoushuJNI.Entity_getMesh(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__SubEntity getSubEntity(long index) {
    long cPtr = MyoushuJNI.Entity_getSubEntity__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__SubEntity(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__SubEntity getSubEntity(String name) {
    long cPtr = MyoushuJNI.Entity_getSubEntity__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__SubEntity(cPtr, false);
  }

  public long getNumSubEntities() {
    return MyoushuJNI.Entity_getNumSubEntities(swigCPtr, this);
  }

  public Entity clone(String newName) {
    long cPtr = MyoushuJNI.Entity_clone(swigCPtr, this, newName);
    return (cPtr == 0) ? null : new Entity(cPtr, false);
  }

  public void setMaterialName(String name) {
    MyoushuJNI.Entity_setMaterialName(swigCPtr, this, name);
  }

  public void _notifyCurrentCamera(Camera cam) {
    MyoushuJNI.Entity__notifyCurrentCamera(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public void setRenderQueueGroup(short queueID) {
    MyoushuJNI.Entity_setRenderQueueGroup(swigCPtr, this, queueID);
  }

  public SWIGTYPE_p_Ogre__AxisAlignedBox getBoundingBox() {
    return new SWIGTYPE_p_Ogre__AxisAlignedBox(MyoushuJNI.Entity_getBoundingBox(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__AxisAlignedBox getChildObjectsBoundingBox() {
    return new SWIGTYPE_p_Ogre__AxisAlignedBox(MyoushuJNI.Entity_getChildObjectsBoundingBox(swigCPtr, this), true);
  }

  public void _updateRenderQueue(SWIGTYPE_p_Ogre__RenderQueue queue) {
    MyoushuJNI.Entity__updateRenderQueue(swigCPtr, this, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue));
  }

  public String getMovableType() {
    return MyoushuJNI.Entity_getMovableType(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__AnimationState getAnimationState(String name) {
    long cPtr = MyoushuJNI.Entity_getAnimationState(swigCPtr, this, name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__AnimationState(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__AnimationStateSet getAllAnimationStates() {
    long cPtr = MyoushuJNI.Entity_getAllAnimationStates(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__AnimationStateSet(cPtr, false);
  }

  public void setDisplaySkeleton(boolean display) {
    MyoushuJNI.Entity_setDisplaySkeleton(swigCPtr, this, display);
  }

  public boolean getDisplaySkeleton() {
    return MyoushuJNI.Entity_getDisplaySkeleton(swigCPtr, this);
  }

  public Entity getManualLodLevel(long index) {
    long cPtr = MyoushuJNI.Entity_getManualLodLevel(swigCPtr, this, index);
    return (cPtr == 0) ? null : new Entity(cPtr, false);
  }

  public long getNumManualLodLevels() {
    return MyoushuJNI.Entity_getNumManualLodLevels(swigCPtr, this);
  }

  public int getCurrentLodIndex() {
    return MyoushuJNI.Entity_getCurrentLodIndex(swigCPtr, this);
  }

  public void setMeshLodBias(float factor, int maxDetailIndex, int minDetailIndex) {
    MyoushuJNI.Entity_setMeshLodBias__SWIG_0(swigCPtr, this, factor, maxDetailIndex, minDetailIndex);
  }

  public void setMeshLodBias(float factor, int maxDetailIndex) {
    MyoushuJNI.Entity_setMeshLodBias__SWIG_1(swigCPtr, this, factor, maxDetailIndex);
  }

  public void setMeshLodBias(float factor) {
    MyoushuJNI.Entity_setMeshLodBias__SWIG_2(swigCPtr, this, factor);
  }

  public void setMaterialLodBias(float factor, int maxDetailIndex, int minDetailIndex) {
    MyoushuJNI.Entity_setMaterialLodBias__SWIG_0(swigCPtr, this, factor, maxDetailIndex, minDetailIndex);
  }

  public void setMaterialLodBias(float factor, int maxDetailIndex) {
    MyoushuJNI.Entity_setMaterialLodBias__SWIG_1(swigCPtr, this, factor, maxDetailIndex);
  }

  public void setMaterialLodBias(float factor) {
    MyoushuJNI.Entity_setMaterialLodBias__SWIG_2(swigCPtr, this, factor);
  }

  public void setPolygonModeOverrideable(boolean PolygonModeOverrideable) {
    MyoushuJNI.Entity_setPolygonModeOverrideable(swigCPtr, this, PolygonModeOverrideable);
  }

  public SWIGTYPE_p_Ogre__TagPoint attachObjectToBone(String boneName, MovableObject pMovable, Quaternion offsetOrientation, Vector3 offsetPosition) {
    long cPtr = MyoushuJNI.Entity_attachObjectToBone__SWIG_0(swigCPtr, this, boneName, MovableObject.getCPtr(pMovable), pMovable, Quaternion.getCPtr(offsetOrientation), offsetOrientation, Vector3.getCPtr(offsetPosition), offsetPosition);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TagPoint(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__TagPoint attachObjectToBone(String boneName, MovableObject pMovable, Quaternion offsetOrientation) {
    long cPtr = MyoushuJNI.Entity_attachObjectToBone__SWIG_1(swigCPtr, this, boneName, MovableObject.getCPtr(pMovable), pMovable, Quaternion.getCPtr(offsetOrientation), offsetOrientation);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TagPoint(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__TagPoint attachObjectToBone(String boneName, MovableObject pMovable) {
    long cPtr = MyoushuJNI.Entity_attachObjectToBone__SWIG_2(swigCPtr, this, boneName, MovableObject.getCPtr(pMovable), pMovable);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TagPoint(cPtr, false);
  }

  public MovableObject detachObjectFromBone(String movableName) {
    long cPtr = MyoushuJNI.Entity_detachObjectFromBone__SWIG_0(swigCPtr, this, movableName);
    return (cPtr == 0) ? null : new MovableObject(cPtr, false);
  }

  public void detachObjectFromBone(MovableObject obj) {
    MyoushuJNI.Entity_detachObjectFromBone__SWIG_1(swigCPtr, this, MovableObject.getCPtr(obj), obj);
  }

  public void detachAllObjectsFromBone() {
    MyoushuJNI.Entity_detachAllObjectsFromBone(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT_std__mapT_std__string_Ogre__MovableObject_p_t_t getAttachedObjectIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT_std__mapT_std__string_Ogre__MovableObject_p_t_t(MyoushuJNI.Entity_getAttachedObjectIterator(swigCPtr, this), true);
  }

  public float getBoundingRadius() {
    return MyoushuJNI.Entity_getBoundingRadius(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__AxisAlignedBox getWorldBoundingBox(boolean derive) {
    return new SWIGTYPE_p_Ogre__AxisAlignedBox(MyoushuJNI.Entity_getWorldBoundingBox__SWIG_0(swigCPtr, this, derive), false);
  }

  public SWIGTYPE_p_Ogre__AxisAlignedBox getWorldBoundingBox() {
    return new SWIGTYPE_p_Ogre__AxisAlignedBox(MyoushuJNI.Entity_getWorldBoundingBox__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__Sphere getWorldBoundingSphere(boolean derive) {
    return new SWIGTYPE_p_Ogre__Sphere(MyoushuJNI.Entity_getWorldBoundingSphere__SWIG_0(swigCPtr, this, derive), false);
  }

  public SWIGTYPE_p_Ogre__Sphere getWorldBoundingSphere() {
    return new SWIGTYPE_p_Ogre__Sphere(MyoushuJNI.Entity_getWorldBoundingSphere__SWIG_1(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__EdgeData getEdgeList() {
    long cPtr = MyoushuJNI.Entity_getEdgeList(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__EdgeData(cPtr, false);
  }

  public boolean hasEdgeList() {
    return MyoushuJNI.Entity_hasEdgeList(swigCPtr, this);
  }

  public Matrix4 _getBoneMatrices() {
    long cPtr = MyoushuJNI.Entity__getBoneMatrices(swigCPtr, this);
    return (cPtr == 0) ? null : new Matrix4(cPtr, false);
  }

  public int _getNumBoneMatrices() {
    return MyoushuJNI.Entity__getNumBoneMatrices(swigCPtr, this);
  }

  public boolean hasSkeleton() {
    return MyoushuJNI.Entity_hasSkeleton(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__SkeletonInstance getSkeleton() {
    long cPtr = MyoushuJNI.Entity_getSkeleton(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__SkeletonInstance(cPtr, false);
  }

  public boolean isHardwareAnimationEnabled() {
    return MyoushuJNI.Entity_isHardwareAnimationEnabled(swigCPtr, this);
  }

  public void _notifyAttached(Node parent, boolean isTagPoint) {
    MyoushuJNI.Entity__notifyAttached__SWIG_0(swigCPtr, this, Node.getCPtr(parent), parent, isTagPoint);
  }

  public void _notifyAttached(Node parent) {
    MyoushuJNI.Entity__notifyAttached__SWIG_1(swigCPtr, this, Node.getCPtr(parent), parent);
  }

  public int getSoftwareAnimationRequests() {
    return MyoushuJNI.Entity_getSoftwareAnimationRequests(swigCPtr, this);
  }

  public int getSoftwareAnimationNormalsRequests() {
    return MyoushuJNI.Entity_getSoftwareAnimationNormalsRequests(swigCPtr, this);
  }

  public void addSoftwareAnimationRequest(boolean normalsAlso) {
    MyoushuJNI.Entity_addSoftwareAnimationRequest(swigCPtr, this, normalsAlso);
  }

  public void removeSoftwareAnimationRequest(boolean normalsAlso) {
    MyoushuJNI.Entity_removeSoftwareAnimationRequest(swigCPtr, this, normalsAlso);
  }

  public void shareSkeletonInstanceWith(Entity entity) {
    MyoushuJNI.Entity_shareSkeletonInstanceWith(swigCPtr, this, Entity.getCPtr(entity), entity);
  }

  public boolean hasVertexAnimation() {
    return MyoushuJNI.Entity_hasVertexAnimation(swigCPtr, this);
  }

  public void stopSharingSkeletonInstance() {
    MyoushuJNI.Entity_stopSharingSkeletonInstance(swigCPtr, this);
  }

  public boolean sharesSkeletonInstance() {
    return MyoushuJNI.Entity_sharesSkeletonInstance(swigCPtr, this);
  }

  public SWIGTYPE_p_std__setT_Ogre__Entity_p_t getSkeletonInstanceSharingSet() {
    long cPtr = MyoushuJNI.Entity_getSkeletonInstanceSharingSet(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__setT_Ogre__Entity_p_t(cPtr, false);
  }

  public void refreshAvailableAnimationState() {
    MyoushuJNI.Entity_refreshAvailableAnimationState(swigCPtr, this);
  }

  public void _updateAnimation() {
    MyoushuJNI.Entity__updateAnimation(swigCPtr, this);
  }

  public boolean _isAnimated() {
    return MyoushuJNI.Entity__isAnimated(swigCPtr, this);
  }

  public boolean _isSkeletonAnimated() {
    return MyoushuJNI.Entity__isSkeletonAnimated(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__VertexData _getSkelAnimVertexData() {
    long cPtr = MyoushuJNI.Entity__getSkelAnimVertexData(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__VertexData(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__VertexData _getSoftwareVertexAnimVertexData() {
    long cPtr = MyoushuJNI.Entity__getSoftwareVertexAnimVertexData(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__VertexData(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__VertexData _getHardwareVertexAnimVertexData() {
    long cPtr = MyoushuJNI.Entity__getHardwareVertexAnimVertexData(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__VertexData(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__TempBlendedBufferInfo _getSkelAnimTempBufferInfo() {
    long cPtr = MyoushuJNI.Entity__getSkelAnimTempBufferInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TempBlendedBufferInfo(cPtr, false);
  }

  public SWIGTYPE_p_Ogre__TempBlendedBufferInfo _getVertexAnimTempBufferInfo() {
    long cPtr = MyoushuJNI.Entity__getVertexAnimTempBufferInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__TempBlendedBufferInfo(cPtr, false);
  }

  public long getTypeFlags() {
    return MyoushuJNI.Entity_getTypeFlags(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__VertexData getVertexDataForBinding() {
    long cPtr = MyoushuJNI.Entity_getVertexDataForBinding(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__VertexData(cPtr, false);
  }

  public Entity.VertexDataBindChoice chooseVertexDataForBinding(boolean hasVertexAnim) {
    return Entity.VertexDataBindChoice.swigToEnum(MyoushuJNI.Entity_chooseVertexDataForBinding(swigCPtr, this, hasVertexAnim));
  }

  public boolean _getBuffersMarkedForAnimation() {
    return MyoushuJNI.Entity__getBuffersMarkedForAnimation(swigCPtr, this);
  }

  public void _markBuffersUsedForAnimation() {
    MyoushuJNI.Entity__markBuffersUsedForAnimation(swigCPtr, this);
  }

  public boolean isInitialised() {
    return MyoushuJNI.Entity_isInitialised(swigCPtr, this);
  }

  public void _initialise(boolean forceReinitialise) {
    MyoushuJNI.Entity__initialise__SWIG_0(swigCPtr, this, forceReinitialise);
  }

  public void _initialise() {
    MyoushuJNI.Entity__initialise__SWIG_1(swigCPtr, this);
  }

  public void _deinitialise() {
    MyoushuJNI.Entity__deinitialise(swigCPtr, this);
  }

  public void backgroundLoadingComplete(SWIGTYPE_p_Ogre__Resource res) {
    MyoushuJNI.Entity_backgroundLoadingComplete(swigCPtr, this, SWIGTYPE_p_Ogre__Resource.getCPtr(res));
  }

  public void visitRenderables(SWIGTYPE_p_Ogre__Renderable__Visitor visitor, boolean debugRenderables) {
    MyoushuJNI.Entity_visitRenderables__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__Renderable__Visitor.getCPtr(visitor), debugRenderables);
  }

  public void visitRenderables(SWIGTYPE_p_Ogre__Renderable__Visitor visitor) {
    MyoushuJNI.Entity_visitRenderables__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__Renderable__Visitor.getCPtr(visitor));
  }

  public enum VertexDataBindChoice {
    BIND_ORIGINAL,
    BIND_SOFTWARE_SKELETAL,
    BIND_SOFTWARE_MORPH,
    BIND_HARDWARE_MORPH;

    public final int swigValue() {
      return swigValue;
    }

    public static VertexDataBindChoice swigToEnum(int swigValue) {
      VertexDataBindChoice[] swigValues = VertexDataBindChoice.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (VertexDataBindChoice swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + VertexDataBindChoice.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private VertexDataBindChoice() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private VertexDataBindChoice(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private VertexDataBindChoice(VertexDataBindChoice swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
