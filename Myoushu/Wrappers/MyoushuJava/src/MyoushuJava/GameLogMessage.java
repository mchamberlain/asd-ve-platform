/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class GameLogMessage extends Message {
  private long swigCPtr;

  public GameLogMessage(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGGameLogMessageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(GameLogMessage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MyoushuJNI.delete_GameLogMessage(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GameLogMessage() {
    this(MyoushuJNI.new_GameLogMessage__SWIG_0(), true);
  }

  public GameLogMessage(GameLogMessage.GameLogMessageType messageType, GameLogEntity pEntity, String entityName) {
    this(MyoushuJNI.new_GameLogMessage__SWIG_1(messageType.swigValue(), GameLogEntity.getCPtr(pEntity), pEntity, entityName), true);
  }

  public GameLogMessage(GameLogMessage.GameLogMessageType messageType, GameLogEntity pEntity) {
    this(MyoushuJNI.new_GameLogMessage__SWIG_2(messageType.swigValue(), GameLogEntity.getCPtr(pEntity), pEntity), true);
  }

  public GameLogMessage(GameLogMessage.GameLogMessageType messageType) {
    this(MyoushuJNI.new_GameLogMessage__SWIG_3(messageType.swigValue()), true);
  }

  public String getClassName() {
    return MyoushuJNI.GameLogMessage_getClassName(swigCPtr, this);
  }

  public GameLogMessage.GameLogMessageType getMessageType() {
    return GameLogMessage.GameLogMessageType.swigToEnum(MyoushuJNI.GameLogMessage_getMessageType(swigCPtr, this));
  }

  public void setMessageType(GameLogMessage.GameLogMessageType messageType) {
    MyoushuJNI.GameLogMessage_setMessageType(swigCPtr, this, messageType.swigValue());
  }

  public GameLogEntity getGameLogEntity() {
    long cPtr = MyoushuJNI.GameLogMessage_getGameLogEntity(swigCPtr, this);
    return (cPtr == 0) ? null : new GameLogEntity(cPtr, false);
  }

  public void setGameLogEntity(GameLogEntity pEntity) {
    MyoushuJNI.GameLogMessage_setGameLogEntity(swigCPtr, this, GameLogEntity.getCPtr(pEntity), pEntity);
  }

  public GameLogEntityEntry getGameLogEntityEntry() {
    long cPtr = MyoushuJNI.GameLogMessage_getGameLogEntityEntry(swigCPtr, this);
    return (cPtr == 0) ? null : new GameLogEntityEntry(cPtr, false);
  }

  public void setGameLogEntityEntry(GameLogEntityEntry pEntity) {
    MyoushuJNI.GameLogMessage_setGameLogEntityEntry(swigCPtr, this, GameLogEntityEntry.getCPtr(pEntity), pEntity);
  }

  public String getEntityName() {
    return MyoushuJNI.GameLogMessage_getEntityName(swigCPtr, this);
  }

  public void setEntityName(String entityName) {
    MyoushuJNI.GameLogMessage_setEntityName(swigCPtr, this, entityName);
  }

  public ListString getEntryPrimaryKey() {
    return new ListString(MyoushuJNI.GameLogMessage_getEntryPrimaryKey(swigCPtr, this), true);
  }

  public void setEntryPrimaryKey(ListString entryPrimaryKey) {
    MyoushuJNI.GameLogMessage_setEntryPrimaryKey(swigCPtr, this, ListString.getCPtr(entryPrimaryKey), entryPrimaryKey);
  }

  public SWIGTYPE_p_uint32_t getActionID() {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.GameLogMessage_getActionID(swigCPtr, this), true);
  }

  public void setActionID(SWIGTYPE_p_uint32_t actionID) {
    MyoushuJNI.GameLogMessage_setActionID(swigCPtr, this, SWIGTYPE_p_uint32_t.getCPtr(actionID));
  }

  public void clear() {
    MyoushuJNI.GameLogMessage_clear(swigCPtr, this);
  }

  public SWIGTYPE_p_uint32_t serialize(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size, Serializable.SerializationTarget sTarget) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.GameLogMessage_serialize__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size), sTarget.swigValue()), true);
  }

  public SWIGTYPE_p_uint32_t serialize(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.GameLogMessage_serialize__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size)), true);
  }

  public SWIGTYPE_p_uint32_t populateInstance(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size, Serializable.SerializationTarget sTarget) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.GameLogMessage_populateInstance__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size), sTarget.swigValue()), true);
  }

  public SWIGTYPE_p_uint32_t populateInstance(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.GameLogMessage_populateInstance__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size)), true);
  }

  public enum GameLogMessageType {
    GLM_UNKNOWN(MyoushuJNI.GameLogMessage_GLM_UNKNOWN_get()),
    GLM_COMMIT_ENTITY,
    GLM_UPDATE_ENTITY,
    GLM_READ_ENTITY,
    GLM_COMMIT_ENTRY,
    GLM_UPDATE_ENTRY,
    GLM_READ_ENTRY,
    GLM_COMMIT_END,
    GLM_UPDATE_END;

    public final int swigValue() {
      return swigValue;
    }

    public static GameLogMessageType swigToEnum(int swigValue) {
      GameLogMessageType[] swigValues = GameLogMessageType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (GameLogMessageType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + GameLogMessageType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private GameLogMessageType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private GameLogMessageType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private GameLogMessageType(GameLogMessageType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
