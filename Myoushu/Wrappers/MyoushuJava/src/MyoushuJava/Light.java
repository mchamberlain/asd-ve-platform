/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class Light extends MovableObject {
  private long swigCPtr;

  public Light(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGLightUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Light obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MyoushuJNI.delete_Light(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setTempSquareDist(float value) {
    MyoushuJNI.Light_tempSquareDist_set(swigCPtr, this, value);
  }

  public float getTempSquareDist() {
    return MyoushuJNI.Light_tempSquareDist_get(swigCPtr, this);
  }

  public void _calcTempSquareDist(Vector3 worldPos) {
    MyoushuJNI.Light__calcTempSquareDist(swigCPtr, this, Vector3.getCPtr(worldPos), worldPos);
  }

  public Light() {
    this(MyoushuJNI.new_Light__SWIG_0(), true);
  }

  public Light(String name) {
    this(MyoushuJNI.new_Light__SWIG_1(name), true);
  }

  public void setType(Light.LightTypes type) {
    MyoushuJNI.Light_setType(swigCPtr, this, type.swigValue());
  }

  public Light.LightTypes getType() {
    return Light.LightTypes.swigToEnum(MyoushuJNI.Light_getType(swigCPtr, this));
  }

  public void setDiffuseColour(float red, float green, float blue) {
    MyoushuJNI.Light_setDiffuseColour__SWIG_0(swigCPtr, this, red, green, blue);
  }

  public void setDiffuseColour(ColourValue colour) {
    MyoushuJNI.Light_setDiffuseColour__SWIG_1(swigCPtr, this, ColourValue.getCPtr(colour), colour);
  }

  public ColourValue getDiffuseColour() {
    return new ColourValue(MyoushuJNI.Light_getDiffuseColour(swigCPtr, this), false);
  }

  public void setSpecularColour(float red, float green, float blue) {
    MyoushuJNI.Light_setSpecularColour__SWIG_0(swigCPtr, this, red, green, blue);
  }

  public void setSpecularColour(ColourValue colour) {
    MyoushuJNI.Light_setSpecularColour__SWIG_1(swigCPtr, this, ColourValue.getCPtr(colour), colour);
  }

  public ColourValue getSpecularColour() {
    return new ColourValue(MyoushuJNI.Light_getSpecularColour(swigCPtr, this), false);
  }

  public void setAttenuation(float range, float constant, float linear, float quadratic) {
    MyoushuJNI.Light_setAttenuation(swigCPtr, this, range, constant, linear, quadratic);
  }

  public float getAttenuationRange() {
    return MyoushuJNI.Light_getAttenuationRange(swigCPtr, this);
  }

  public float getAttenuationConstant() {
    return MyoushuJNI.Light_getAttenuationConstant(swigCPtr, this);
  }

  public float getAttenuationLinear() {
    return MyoushuJNI.Light_getAttenuationLinear(swigCPtr, this);
  }

  public float getAttenuationQuadric() {
    return MyoushuJNI.Light_getAttenuationQuadric(swigCPtr, this);
  }

  public void setPosition(float x, float y, float z) {
    MyoushuJNI.Light_setPosition__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void setPosition(Vector3 vec) {
    MyoushuJNI.Light_setPosition__SWIG_1(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public Vector3 getPosition() {
    return new Vector3(MyoushuJNI.Light_getPosition(swigCPtr, this), false);
  }

  public void setDirection(float x, float y, float z) {
    MyoushuJNI.Light_setDirection__SWIG_0(swigCPtr, this, x, y, z);
  }

  public void setDirection(Vector3 vec) {
    MyoushuJNI.Light_setDirection__SWIG_1(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public Vector3 getDirection() {
    return new Vector3(MyoushuJNI.Light_getDirection(swigCPtr, this), false);
  }

  public void setSpotlightRange(Radian innerAngle, Radian outerAngle, float falloff) {
    MyoushuJNI.Light_setSpotlightRange__SWIG_0(swigCPtr, this, Radian.getCPtr(innerAngle), innerAngle, Radian.getCPtr(outerAngle), outerAngle, falloff);
  }

  public void setSpotlightRange(Radian innerAngle, Radian outerAngle) {
    MyoushuJNI.Light_setSpotlightRange__SWIG_1(swigCPtr, this, Radian.getCPtr(innerAngle), innerAngle, Radian.getCPtr(outerAngle), outerAngle);
  }

  public Radian getSpotlightInnerAngle() {
    return new Radian(MyoushuJNI.Light_getSpotlightInnerAngle(swigCPtr, this), false);
  }

  public Radian getSpotlightOuterAngle() {
    return new Radian(MyoushuJNI.Light_getSpotlightOuterAngle(swigCPtr, this), false);
  }

  public float getSpotlightFalloff() {
    return MyoushuJNI.Light_getSpotlightFalloff(swigCPtr, this);
  }

  public void setSpotlightInnerAngle(Radian val) {
    MyoushuJNI.Light_setSpotlightInnerAngle(swigCPtr, this, Radian.getCPtr(val), val);
  }

  public void setSpotlightOuterAngle(Radian val) {
    MyoushuJNI.Light_setSpotlightOuterAngle(swigCPtr, this, Radian.getCPtr(val), val);
  }

  public void setSpotlightFalloff(float val) {
    MyoushuJNI.Light_setSpotlightFalloff(swigCPtr, this, val);
  }

  public void setPowerScale(float power) {
    MyoushuJNI.Light_setPowerScale(swigCPtr, this, power);
  }

  public float getPowerScale() {
    return MyoushuJNI.Light_getPowerScale(swigCPtr, this);
  }

  public void _notifyAttached(Node parent, boolean isTagPoint) {
    MyoushuJNI.Light__notifyAttached__SWIG_0(swigCPtr, this, Node.getCPtr(parent), parent, isTagPoint);
  }

  public void _notifyAttached(Node parent) {
    MyoushuJNI.Light__notifyAttached__SWIG_1(swigCPtr, this, Node.getCPtr(parent), parent);
  }

  public void _notifyMoved() {
    MyoushuJNI.Light__notifyMoved(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__AxisAlignedBox getBoundingBox() {
    return new SWIGTYPE_p_Ogre__AxisAlignedBox(MyoushuJNI.Light_getBoundingBox(swigCPtr, this), false);
  }

  public void _updateRenderQueue(SWIGTYPE_p_Ogre__RenderQueue queue) {
    MyoushuJNI.Light__updateRenderQueue(swigCPtr, this, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue));
  }

  public String getMovableType() {
    return MyoushuJNI.Light_getMovableType(swigCPtr, this);
  }

  public Vector3 getDerivedPosition(boolean cameraRelativeIfSet) {
    return new Vector3(MyoushuJNI.Light_getDerivedPosition__SWIG_0(swigCPtr, this, cameraRelativeIfSet), false);
  }

  public Vector3 getDerivedPosition() {
    return new Vector3(MyoushuJNI.Light_getDerivedPosition__SWIG_1(swigCPtr, this), false);
  }

  public Vector3 getDerivedDirection() {
    return new Vector3(MyoushuJNI.Light_getDerivedDirection(swigCPtr, this), false);
  }

  public void setVisible(boolean visible) {
    MyoushuJNI.Light_setVisible(swigCPtr, this, visible);
  }

  public float getBoundingRadius() {
    return MyoushuJNI.Light_getBoundingRadius(swigCPtr, this);
  }

  public Vector4 getAs4DVector(boolean cameraRelativeIfSet) {
    return new Vector4(MyoushuJNI.Light_getAs4DVector__SWIG_0(swigCPtr, this, cameraRelativeIfSet), true);
  }

  public Vector4 getAs4DVector() {
    return new Vector4(MyoushuJNI.Light_getAs4DVector__SWIG_1(swigCPtr, this), true);
  }

  public SWIGTYPE_p_Ogre__PlaneBoundedVolume _getNearClipVolume(Camera cam) {
    return new SWIGTYPE_p_Ogre__PlaneBoundedVolume(MyoushuJNI.Light__getNearClipVolume(swigCPtr, this, Camera.getCPtr(cam), cam), false);
  }

  public SWIGTYPE_p_Ogre__PlaneBoundedVolumeList _getFrustumClipVolumes(Camera cam) {
    return new SWIGTYPE_p_Ogre__PlaneBoundedVolumeList(MyoushuJNI.Light__getFrustumClipVolumes(swigCPtr, this, Camera.getCPtr(cam), cam), false);
  }

  public long getTypeFlags() {
    return MyoushuJNI.Light_getTypeFlags(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__AnimableValuePtr createAnimableValue(String valueName) {
    return new SWIGTYPE_p_Ogre__AnimableValuePtr(MyoushuJNI.Light_createAnimableValue(swigCPtr, this, valueName), true);
  }

  public void setCustomShadowCameraSetup(SWIGTYPE_p_Ogre__ShadowCameraSetupPtr customShadowSetup) {
    MyoushuJNI.Light_setCustomShadowCameraSetup(swigCPtr, this, SWIGTYPE_p_Ogre__ShadowCameraSetupPtr.getCPtr(customShadowSetup));
  }

  public void resetCustomShadowCameraSetup() {
    MyoushuJNI.Light_resetCustomShadowCameraSetup(swigCPtr, this);
  }

  public SWIGTYPE_p_Ogre__ShadowCameraSetupPtr getCustomShadowCameraSetup() {
    return new SWIGTYPE_p_Ogre__ShadowCameraSetupPtr(MyoushuJNI.Light_getCustomShadowCameraSetup(swigCPtr, this), false);
  }

  public void visitRenderables(SWIGTYPE_p_Ogre__Renderable__Visitor visitor, boolean debugRenderables) {
    MyoushuJNI.Light_visitRenderables__SWIG_0(swigCPtr, this, SWIGTYPE_p_Ogre__Renderable__Visitor.getCPtr(visitor), debugRenderables);
  }

  public void visitRenderables(SWIGTYPE_p_Ogre__Renderable__Visitor visitor) {
    MyoushuJNI.Light_visitRenderables__SWIG_1(swigCPtr, this, SWIGTYPE_p_Ogre__Renderable__Visitor.getCPtr(visitor));
  }

  public long _getIndexInFrame() {
    return MyoushuJNI.Light__getIndexInFrame(swigCPtr, this);
  }

  public void _notifyIndexInFrame(long i) {
    MyoushuJNI.Light__notifyIndexInFrame(swigCPtr, this, i);
  }

  public void setShadowFarDistance(float distance) {
    MyoushuJNI.Light_setShadowFarDistance(swigCPtr, this, distance);
  }

  public void resetShadowFarDistance() {
    MyoushuJNI.Light_resetShadowFarDistance(swigCPtr, this);
  }

  public float getShadowFarDistance() {
    return MyoushuJNI.Light_getShadowFarDistance(swigCPtr, this);
  }

  public float getShadowFarDistanceSquared() {
    return MyoushuJNI.Light_getShadowFarDistanceSquared(swigCPtr, this);
  }

  public void _setCameraRelative(Camera cam) {
    MyoushuJNI.Light__setCameraRelative(swigCPtr, this, Camera.getCPtr(cam), cam);
  }

  public enum LightTypes {
    LT_POINT(MyoushuJNI.Light_LT_POINT_get()),
    LT_DIRECTIONAL(MyoushuJNI.Light_LT_DIRECTIONAL_get()),
    LT_SPOTLIGHT(MyoushuJNI.Light_LT_SPOTLIGHT_get());

    public final int swigValue() {
      return swigValue;
    }

    public static LightTypes swigToEnum(int swigValue) {
      LightTypes[] swigValues = LightTypes.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (LightTypes swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + LightTypes.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private LightTypes() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private LightTypes(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private LightTypes(LightTypes swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
