/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class KeyValueProperties extends Serializable {
  private long swigCPtr;

  public KeyValueProperties(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGKeyValuePropertiesUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(KeyValueProperties obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_KeyValueProperties(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public KeyValueProperties() {
    this(MyoushuJNI.new_KeyValueProperties(), true);
  }

  public void clear() {
    MyoushuJNI.KeyValueProperties_clear(swigCPtr, this);
  }

  public SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__iterator getBeginIterator() {
    return new SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__iterator(MyoushuJNI.KeyValueProperties_getBeginIterator(swigCPtr, this), true);
  }

  public SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__iterator getEndIterator() {
    return new SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__iterator(MyoushuJNI.KeyValueProperties_getEndIterator(swigCPtr, this), true);
  }

  public SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__const_iterator getBeginConstIterator() {
    return new SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__const_iterator(MyoushuJNI.KeyValueProperties_getBeginConstIterator(swigCPtr, this), true);
  }

  public SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__const_iterator getEndConstIterator() {
    return new SWIGTYPE_p_Myoushu__KeyValueProperties__KeyValueMap__const_iterator(MyoushuJNI.KeyValueProperties_getEndConstIterator(swigCPtr, this), true);
  }

  public void insert(String key, Value value) {
    MyoushuJNI.KeyValueProperties_insert(swigCPtr, this, key, Value.getCPtr(value), value);
  }

  public Value removeAndGetValue(String key) {
    long cPtr = MyoushuJNI.KeyValueProperties_removeAndGetValue(swigCPtr, this, key);
    return (cPtr == 0) ? null : new Value(cPtr, false);
  }

  public boolean remove(String key) {
    return MyoushuJNI.KeyValueProperties_remove(swigCPtr, this, key);
  }

  public Value get(String key) {
    long cPtr = MyoushuJNI.KeyValueProperties_get__SWIG_0(swigCPtr, this, key);
    return (cPtr == 0) ? null : new Value(cPtr, false);
  }

  public SWIGTYPE_p_uint32_t serialize(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size, Serializable.SerializationTarget sTarget) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.KeyValueProperties_serialize__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size), sTarget.swigValue()), true);
  }

  public SWIGTYPE_p_uint32_t serialize(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.KeyValueProperties_serialize__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size)), true);
  }

  public SWIGTYPE_p_uint32_t populateInstance(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size, Serializable.SerializationTarget sTarget) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.KeyValueProperties_populateInstance__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size), sTarget.swigValue()), true);
  }

  public SWIGTYPE_p_uint32_t populateInstance(SWIGTYPE_p_void pMem, SWIGTYPE_p_uint32_t size) {
    return new SWIGTYPE_p_uint32_t(MyoushuJNI.KeyValueProperties_populateInstance__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(pMem), SWIGTYPE_p_uint32_t.getCPtr(size)), true);
  }

}
