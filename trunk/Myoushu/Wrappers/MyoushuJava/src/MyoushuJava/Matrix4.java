/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class Matrix4 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Matrix4(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Matrix4 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MyoushuJNI.delete_Matrix4(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Matrix4() {
    this(MyoushuJNI.new_Matrix4__SWIG_0(), true);
  }

  public Matrix4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33) {
    this(MyoushuJNI.new_Matrix4__SWIG_1(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33), true);
  }

  public Matrix4(Matrix3 m3x3) {
    this(MyoushuJNI.new_Matrix4__SWIG_2(Matrix3.getCPtr(m3x3), m3x3), true);
  }

  public Matrix4(Quaternion rot) {
    this(MyoushuJNI.new_Matrix4__SWIG_3(Quaternion.getCPtr(rot), rot), true);
  }

  public Matrix4 concatenate(Matrix4 m2) {
    return new Matrix4(MyoushuJNI.Matrix4_concatenate(swigCPtr, this, Matrix4.getCPtr(m2), m2), true);
  }

  public Matrix4 transpose() {
    return new Matrix4(MyoushuJNI.Matrix4_transpose(swigCPtr, this), true);
  }

  public void setTrans(Vector3 v) {
    MyoushuJNI.Matrix4_setTrans(swigCPtr, this, Vector3.getCPtr(v), v);
  }

  public Vector3 getTrans() {
    return new Vector3(MyoushuJNI.Matrix4_getTrans__SWIG_0(swigCPtr, this), true);
  }

  public void makeTrans(Vector3 v) {
    MyoushuJNI.Matrix4_makeTrans__SWIG_0(swigCPtr, this, Vector3.getCPtr(v), v);
  }

  public void makeTrans(float tx, float ty, float tz) {
    MyoushuJNI.Matrix4_makeTrans__SWIG_1(swigCPtr, this, tx, ty, tz);
  }

  public static Matrix4 getTrans(Vector3 v) {
    return new Matrix4(MyoushuJNI.Matrix4_getTrans__SWIG_1(Vector3.getCPtr(v), v), true);
  }

  public static Matrix4 getTrans(float t_x, float t_y, float t_z) {
    return new Matrix4(MyoushuJNI.Matrix4_getTrans__SWIG_2(t_x, t_y, t_z), true);
  }

  public void setScale(Vector3 v) {
    MyoushuJNI.Matrix4_setScale(swigCPtr, this, Vector3.getCPtr(v), v);
  }

  public static Matrix4 getScale(Vector3 v) {
    return new Matrix4(MyoushuJNI.Matrix4_getScale__SWIG_0(Vector3.getCPtr(v), v), true);
  }

  public static Matrix4 getScale(float s_x, float s_y, float s_z) {
    return new Matrix4(MyoushuJNI.Matrix4_getScale__SWIG_1(s_x, s_y, s_z), true);
  }

  public void extract3x3Matrix(Matrix3 m3x3) {
    MyoushuJNI.Matrix4_extract3x3Matrix(swigCPtr, this, Matrix3.getCPtr(m3x3), m3x3);
  }

  public boolean hasScale() {
    return MyoushuJNI.Matrix4_hasScale(swigCPtr, this);
  }

  public boolean hasNegativeScale() {
    return MyoushuJNI.Matrix4_hasNegativeScale(swigCPtr, this);
  }

  public Quaternion extractQuaternion() {
    return new Quaternion(MyoushuJNI.Matrix4_extractQuaternion(swigCPtr, this), true);
  }

  public static Matrix4 getZERO() {
    long cPtr = MyoushuJNI.Matrix4_ZERO_get();
    return (cPtr == 0) ? null : new Matrix4(cPtr, false);
  }

  public static Matrix4 getIDENTITY() {
    long cPtr = MyoushuJNI.Matrix4_IDENTITY_get();
    return (cPtr == 0) ? null : new Matrix4(cPtr, false);
  }

  public static Matrix4 getCLIPSPACE2DTOIMAGESPACE() {
    long cPtr = MyoushuJNI.Matrix4_CLIPSPACE2DTOIMAGESPACE_get();
    return (cPtr == 0) ? null : new Matrix4(cPtr, false);
  }

  public Matrix4 adjoint() {
    return new Matrix4(MyoushuJNI.Matrix4_adjoint(swigCPtr, this), true);
  }

  public float determinant() {
    return MyoushuJNI.Matrix4_determinant(swigCPtr, this);
  }

  public Matrix4 inverse() {
    return new Matrix4(MyoushuJNI.Matrix4_inverse(swigCPtr, this), true);
  }

  public void makeTransform(Vector3 position, Vector3 scale, Quaternion orientation) {
    MyoushuJNI.Matrix4_makeTransform(swigCPtr, this, Vector3.getCPtr(position), position, Vector3.getCPtr(scale), scale, Quaternion.getCPtr(orientation), orientation);
  }

  public void makeInverseTransform(Vector3 position, Vector3 scale, Quaternion orientation) {
    MyoushuJNI.Matrix4_makeInverseTransform(swigCPtr, this, Vector3.getCPtr(position), position, Vector3.getCPtr(scale), scale, Quaternion.getCPtr(orientation), orientation);
  }

  public boolean isAffine() {
    return MyoushuJNI.Matrix4_isAffine(swigCPtr, this);
  }

  public Matrix4 inverseAffine() {
    return new Matrix4(MyoushuJNI.Matrix4_inverseAffine(swigCPtr, this), true);
  }

  public Matrix4 concatenateAffine(Matrix4 m2) {
    return new Matrix4(MyoushuJNI.Matrix4_concatenateAffine(swigCPtr, this, Matrix4.getCPtr(m2), m2), true);
  }

  public Vector3 transformAffine(Vector3 v) {
    return new Vector3(MyoushuJNI.Matrix4_transformAffine__SWIG_0(swigCPtr, this, Vector3.getCPtr(v), v), true);
  }

  public Vector4 transformAffine(Vector4 v) {
    return new Vector4(MyoushuJNI.Matrix4_transformAffine__SWIG_1(swigCPtr, this, Vector4.getCPtr(v), v), true);
  }

}
