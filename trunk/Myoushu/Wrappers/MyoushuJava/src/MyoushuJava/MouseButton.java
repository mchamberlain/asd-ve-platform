/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class MouseButton {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public MouseButton(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(MouseButton obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MyoushuJNI.delete_MouseButton(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MouseButton(MouseButton.Enum _value) {
    this(MyoushuJNI.new_MouseButton__SWIG_0(_value.swigValue()), true);
  }

  public MouseButton() {
    this(MyoushuJNI.new_MouseButton__SWIG_1(), true);
  }

  public MouseButton(MouseButtonObsolete _value) {
    this(MyoushuJNI.new_MouseButton__SWIG_2(_value.swigValue()), true);
  }

  public int toValue() {
    return MyoushuJNI.MouseButton_toValue(swigCPtr, this);
  }

  public enum Enum {
    Left(MyoushuJNI.MouseButton_Left_get()),
    Right,
    Middle,
    Button0(MyoushuJNI.MouseButton_Button0_get()),
    Button1,
    Button2,
    Button3,
    Button4,
    Button5,
    Button6,
    Button7,
    None(MyoushuJNI.MouseButton_None_get());

    public final int swigValue() {
      return swigValue;
    }

    public static Enum swigToEnum(int swigValue) {
      Enum[] swigValues = Enum.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (Enum swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + Enum.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private Enum() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private Enum(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private Enum(Enum swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
