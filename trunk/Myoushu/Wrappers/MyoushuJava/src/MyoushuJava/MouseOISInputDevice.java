/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class MouseOISInputDevice extends OISInputDevice_OIS_Mouse {
  private long swigCPtr;

  public MouseOISInputDevice(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGMouseOISInputDeviceUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(MouseOISInputDevice obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_MouseOISInputDevice(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public static String getINPUT_DEVICE_NAME() {
    return MyoushuJNI.MouseOISInputDevice_INPUT_DEVICE_NAME_get();
  }

  public MouseOISInputDevice(String name, SWIGTYPE_p_OIS__Mouse oisMouse) {
    this(MyoushuJNI.new_MouseOISInputDevice(name, SWIGTYPE_p_OIS__Mouse.getCPtr(oisMouse)), true);
  }

  public String getInputEventString(String inputIdentifier) {
    return MyoushuJNI.MouseOISInputDevice_getInputEventString(swigCPtr, this, inputIdentifier);
  }

  public int getInputCodeFromInputIdentifier(String inputIdentifier) {
    return MyoushuJNI.MouseOISInputDevice_getInputCodeFromInputIdentifier(swigCPtr, this, inputIdentifier);
  }

  public String getInputIdentifierFromInputCode(int inputCode) {
    return MyoushuJNI.MouseOISInputDevice_getInputIdentifierFromInputCode(swigCPtr, this, inputCode);
  }

  public void capture() {
    MyoushuJNI.MouseOISInputDevice_capture(swigCPtr, this);
  }

  public boolean mousePressed(SWIGTYPE_p_OIS__MouseEvent arg, SWIGTYPE_p_OIS__MouseButtonID id) {
    return MyoushuJNI.MouseOISInputDevice_mousePressed(swigCPtr, this, SWIGTYPE_p_OIS__MouseEvent.getCPtr(arg), SWIGTYPE_p_OIS__MouseButtonID.getCPtr(id));
  }

  public boolean mouseReleased(SWIGTYPE_p_OIS__MouseEvent arg, SWIGTYPE_p_OIS__MouseButtonID id) {
    return MyoushuJNI.MouseOISInputDevice_mouseReleased(swigCPtr, this, SWIGTYPE_p_OIS__MouseEvent.getCPtr(arg), SWIGTYPE_p_OIS__MouseButtonID.getCPtr(id));
  }

  public boolean mouseMoved(SWIGTYPE_p_OIS__MouseEvent arg) {
    return MyoushuJNI.MouseOISInputDevice_mouseMoved(swigCPtr, this, SWIGTYPE_p_OIS__MouseEvent.getCPtr(arg));
  }

  public enum MouseCode {
    MC_AXIS_X(MyoushuJNI.MouseOISInputDevice_MC_AXIS_X_get()),
    MC_AXIS_Y,
    MC_WHEEL,
    MC_BUTTON0,
    MC_BUTTON1,
    MC_BUTTON2,
    MC_BUTTON3,
    MC_BUTTON4,
    MC_BUTTON5,
    MC_BUTTON6,
    MC_BUTTON7,
    MC_BUTTON8,
    MC_BUTTON9;

    public final int swigValue() {
      return swigValue;
    }

    public static MouseCode swigToEnum(int swigValue) {
      MouseCode[] swigValues = MouseCode.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (MouseCode swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + MouseCode.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private MouseCode() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private MouseCode(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private MouseCode(MouseCode swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
