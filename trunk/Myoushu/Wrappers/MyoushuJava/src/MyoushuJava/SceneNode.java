/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class SceneNode extends Node {
  private long swigCPtr;

  public SceneNode(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGSceneNodeUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(SceneNode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MyoushuJNI.delete_SceneNode(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SceneNode(SWIGTYPE_p_Ogre__SceneManager creator) {
    this(MyoushuJNI.new_SceneNode__SWIG_0(SWIGTYPE_p_Ogre__SceneManager.getCPtr(creator)), true);
  }

  public SceneNode(SWIGTYPE_p_Ogre__SceneManager creator, String name) {
    this(MyoushuJNI.new_SceneNode__SWIG_1(SWIGTYPE_p_Ogre__SceneManager.getCPtr(creator), name), true);
  }

  public void attachObject(MovableObject obj) {
    MyoushuJNI.SceneNode_attachObject(swigCPtr, this, MovableObject.getCPtr(obj), obj);
  }

  public int numAttachedObjects() {
    return MyoushuJNI.SceneNode_numAttachedObjects(swigCPtr, this);
  }

  public MovableObject getAttachedObject(int index) {
    long cPtr = MyoushuJNI.SceneNode_getAttachedObject__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new MovableObject(cPtr, false);
  }

  public MovableObject getAttachedObject(String name) {
    long cPtr = MyoushuJNI.SceneNode_getAttachedObject__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new MovableObject(cPtr, false);
  }

  public MovableObject detachObject(int index) {
    long cPtr = MyoushuJNI.SceneNode_detachObject__SWIG_0(swigCPtr, this, index);
    return (cPtr == 0) ? null : new MovableObject(cPtr, false);
  }

  public void detachObject(MovableObject obj) {
    MyoushuJNI.SceneNode_detachObject__SWIG_1(swigCPtr, this, MovableObject.getCPtr(obj), obj);
  }

  public MovableObject detachObject(String name) {
    long cPtr = MyoushuJNI.SceneNode_detachObject__SWIG_2(swigCPtr, this, name);
    return (cPtr == 0) ? null : new MovableObject(cPtr, false);
  }

  public void detachAllObjects() {
    MyoushuJNI.SceneNode_detachAllObjects(swigCPtr, this);
  }

  public boolean isInSceneGraph() {
    return MyoushuJNI.SceneNode_isInSceneGraph(swigCPtr, this);
  }

  public void _notifyRootNode() {
    MyoushuJNI.SceneNode__notifyRootNode(swigCPtr, this);
  }

  public void _update(boolean updateChildren, boolean parentHasChanged) {
    MyoushuJNI.SceneNode__update(swigCPtr, this, updateChildren, parentHasChanged);
  }

  public void _updateBounds() {
    MyoushuJNI.SceneNode__updateBounds(swigCPtr, this);
  }

  public void _findVisibleObjects(Camera cam, SWIGTYPE_p_Ogre__RenderQueue queue, SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo visibleBounds, boolean includeChildren, boolean displayNodes, boolean onlyShadowCasters) {
    MyoushuJNI.SceneNode__findVisibleObjects__SWIG_0(swigCPtr, this, Camera.getCPtr(cam), cam, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue), SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo.getCPtr(visibleBounds), includeChildren, displayNodes, onlyShadowCasters);
  }

  public void _findVisibleObjects(Camera cam, SWIGTYPE_p_Ogre__RenderQueue queue, SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo visibleBounds, boolean includeChildren, boolean displayNodes) {
    MyoushuJNI.SceneNode__findVisibleObjects__SWIG_1(swigCPtr, this, Camera.getCPtr(cam), cam, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue), SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo.getCPtr(visibleBounds), includeChildren, displayNodes);
  }

  public void _findVisibleObjects(Camera cam, SWIGTYPE_p_Ogre__RenderQueue queue, SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo visibleBounds, boolean includeChildren) {
    MyoushuJNI.SceneNode__findVisibleObjects__SWIG_2(swigCPtr, this, Camera.getCPtr(cam), cam, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue), SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo.getCPtr(visibleBounds), includeChildren);
  }

  public void _findVisibleObjects(Camera cam, SWIGTYPE_p_Ogre__RenderQueue queue, SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo visibleBounds) {
    MyoushuJNI.SceneNode__findVisibleObjects__SWIG_3(swigCPtr, this, Camera.getCPtr(cam), cam, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue), SWIGTYPE_p_Ogre__VisibleObjectsBoundsInfo.getCPtr(visibleBounds));
  }

  public SWIGTYPE_p_Ogre__AxisAlignedBox _getWorldAABB() {
    return new SWIGTYPE_p_Ogre__AxisAlignedBox(MyoushuJNI.SceneNode__getWorldAABB(swigCPtr, this), false);
  }

  public SWIGTYPE_p_Ogre__MapIteratorT___stdext__hash_mapT_String_MovableObject_p_t_t getAttachedObjectIterator() {
    return new SWIGTYPE_p_Ogre__MapIteratorT___stdext__hash_mapT_String_MovableObject_p_t_t(MyoushuJNI.SceneNode_getAttachedObjectIterator__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_Ogre__SceneManager getCreator() {
    long cPtr = MyoushuJNI.SceneNode_getCreator(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Ogre__SceneManager(cPtr, false);
  }

  public void removeAndDestroyChild(String name) {
    MyoushuJNI.SceneNode_removeAndDestroyChild__SWIG_0(swigCPtr, this, name);
  }

  public void removeAndDestroyChild(int index) {
    MyoushuJNI.SceneNode_removeAndDestroyChild__SWIG_1(swigCPtr, this, index);
  }

  public void removeAndDestroyAllChildren() {
    MyoushuJNI.SceneNode_removeAndDestroyAllChildren(swigCPtr, this);
  }

  public void showBoundingBox(boolean bShow) {
    MyoushuJNI.SceneNode_showBoundingBox(swigCPtr, this, bShow);
  }

  public void _addBoundingBoxToQueue(SWIGTYPE_p_Ogre__RenderQueue queue) {
    MyoushuJNI.SceneNode__addBoundingBoxToQueue(swigCPtr, this, SWIGTYPE_p_Ogre__RenderQueue.getCPtr(queue));
  }

  public boolean getShowBoundingBox() {
    return MyoushuJNI.SceneNode_getShowBoundingBox(swigCPtr, this);
  }

  public SceneNode createChildSceneNode(Vector3 translate, Quaternion rotate) {
    long cPtr = MyoushuJNI.SceneNode_createChildSceneNode__SWIG_0(swigCPtr, this, Vector3.getCPtr(translate), translate, Quaternion.getCPtr(rotate), rotate);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public SceneNode createChildSceneNode(Vector3 translate) {
    long cPtr = MyoushuJNI.SceneNode_createChildSceneNode__SWIG_1(swigCPtr, this, Vector3.getCPtr(translate), translate);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public SceneNode createChildSceneNode() {
    long cPtr = MyoushuJNI.SceneNode_createChildSceneNode__SWIG_2(swigCPtr, this);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public SceneNode createChildSceneNode(String name, Vector3 translate, Quaternion rotate) {
    long cPtr = MyoushuJNI.SceneNode_createChildSceneNode__SWIG_3(swigCPtr, this, name, Vector3.getCPtr(translate), translate, Quaternion.getCPtr(rotate), rotate);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public SceneNode createChildSceneNode(String name, Vector3 translate) {
    long cPtr = MyoushuJNI.SceneNode_createChildSceneNode__SWIG_4(swigCPtr, this, name, Vector3.getCPtr(translate), translate);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public SceneNode createChildSceneNode(String name) {
    long cPtr = MyoushuJNI.SceneNode_createChildSceneNode__SWIG_5(swigCPtr, this, name);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public void findLights(SWIGTYPE_p_std__vectorT_Ogre__Light_p_t destList, float radius) {
    MyoushuJNI.SceneNode_findLights(swigCPtr, this, SWIGTYPE_p_std__vectorT_Ogre__Light_p_t.getCPtr(destList), radius);
  }

  public void setFixedYawAxis(boolean useFixed, Vector3 fixedAxis) {
    MyoushuJNI.SceneNode_setFixedYawAxis__SWIG_0(swigCPtr, this, useFixed, Vector3.getCPtr(fixedAxis), fixedAxis);
  }

  public void setFixedYawAxis(boolean useFixed) {
    MyoushuJNI.SceneNode_setFixedYawAxis__SWIG_1(swigCPtr, this, useFixed);
  }

  public void yaw(Radian angle, Node.TransformSpace relativeTo) {
    MyoushuJNI.SceneNode_yaw__SWIG_0(swigCPtr, this, Radian.getCPtr(angle), angle, relativeTo.swigValue());
  }

  public void yaw(Radian angle) {
    MyoushuJNI.SceneNode_yaw__SWIG_1(swigCPtr, this, Radian.getCPtr(angle), angle);
  }

  public void setDirection(float x, float y, float z, Node.TransformSpace relativeTo, Vector3 localDirectionVector) {
    MyoushuJNI.SceneNode_setDirection__SWIG_0(swigCPtr, this, x, y, z, relativeTo.swigValue(), Vector3.getCPtr(localDirectionVector), localDirectionVector);
  }

  public void setDirection(float x, float y, float z, Node.TransformSpace relativeTo) {
    MyoushuJNI.SceneNode_setDirection__SWIG_1(swigCPtr, this, x, y, z, relativeTo.swigValue());
  }

  public void setDirection(float x, float y, float z) {
    MyoushuJNI.SceneNode_setDirection__SWIG_2(swigCPtr, this, x, y, z);
  }

  public void setDirection(Vector3 vec, Node.TransformSpace relativeTo, Vector3 localDirectionVector) {
    MyoushuJNI.SceneNode_setDirection__SWIG_3(swigCPtr, this, Vector3.getCPtr(vec), vec, relativeTo.swigValue(), Vector3.getCPtr(localDirectionVector), localDirectionVector);
  }

  public void setDirection(Vector3 vec, Node.TransformSpace relativeTo) {
    MyoushuJNI.SceneNode_setDirection__SWIG_4(swigCPtr, this, Vector3.getCPtr(vec), vec, relativeTo.swigValue());
  }

  public void setDirection(Vector3 vec) {
    MyoushuJNI.SceneNode_setDirection__SWIG_5(swigCPtr, this, Vector3.getCPtr(vec), vec);
  }

  public void lookAt(Vector3 targetPoint, Node.TransformSpace relativeTo, Vector3 localDirectionVector) {
    MyoushuJNI.SceneNode_lookAt__SWIG_0(swigCPtr, this, Vector3.getCPtr(targetPoint), targetPoint, relativeTo.swigValue(), Vector3.getCPtr(localDirectionVector), localDirectionVector);
  }

  public void lookAt(Vector3 targetPoint, Node.TransformSpace relativeTo) {
    MyoushuJNI.SceneNode_lookAt__SWIG_1(swigCPtr, this, Vector3.getCPtr(targetPoint), targetPoint, relativeTo.swigValue());
  }

  public void setAutoTracking(boolean enabled, SceneNode target, Vector3 localDirectionVector, Vector3 offset) {
    MyoushuJNI.SceneNode_setAutoTracking__SWIG_0(swigCPtr, this, enabled, SceneNode.getCPtr(target), target, Vector3.getCPtr(localDirectionVector), localDirectionVector, Vector3.getCPtr(offset), offset);
  }

  public void setAutoTracking(boolean enabled, SceneNode target, Vector3 localDirectionVector) {
    MyoushuJNI.SceneNode_setAutoTracking__SWIG_1(swigCPtr, this, enabled, SceneNode.getCPtr(target), target, Vector3.getCPtr(localDirectionVector), localDirectionVector);
  }

  public void setAutoTracking(boolean enabled, SceneNode target) {
    MyoushuJNI.SceneNode_setAutoTracking__SWIG_2(swigCPtr, this, enabled, SceneNode.getCPtr(target), target);
  }

  public void setAutoTracking(boolean enabled) {
    MyoushuJNI.SceneNode_setAutoTracking__SWIG_3(swigCPtr, this, enabled);
  }

  public SceneNode getAutoTrackTarget() {
    long cPtr = MyoushuJNI.SceneNode_getAutoTrackTarget(swigCPtr, this);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public Vector3 getAutoTrackOffset() {
    return new Vector3(MyoushuJNI.SceneNode_getAutoTrackOffset(swigCPtr, this), false);
  }

  public Vector3 getAutoTrackLocalDirection() {
    return new Vector3(MyoushuJNI.SceneNode_getAutoTrackLocalDirection(swigCPtr, this), false);
  }

  public void _autoTrack() {
    MyoushuJNI.SceneNode__autoTrack(swigCPtr, this);
  }

  public SceneNode getParentSceneNode() {
    long cPtr = MyoushuJNI.SceneNode_getParentSceneNode(swigCPtr, this);
    return (cPtr == 0) ? null : new SceneNode(cPtr, false);
  }

  public void setVisible(boolean visible, boolean cascade) {
    MyoushuJNI.SceneNode_setVisible__SWIG_0(swigCPtr, this, visible, cascade);
  }

  public void setVisible(boolean visible) {
    MyoushuJNI.SceneNode_setVisible__SWIG_1(swigCPtr, this, visible);
  }

  public void flipVisibility(boolean cascade) {
    MyoushuJNI.SceneNode_flipVisibility__SWIG_0(swigCPtr, this, cascade);
  }

  public void flipVisibility() {
    MyoushuJNI.SceneNode_flipVisibility__SWIG_1(swigCPtr, this);
  }

  public void setDebugDisplayEnabled(boolean enabled, boolean cascade) {
    MyoushuJNI.SceneNode_setDebugDisplayEnabled__SWIG_0(swigCPtr, this, enabled, cascade);
  }

  public void setDebugDisplayEnabled(boolean enabled) {
    MyoushuJNI.SceneNode_setDebugDisplayEnabled__SWIG_1(swigCPtr, this, enabled);
  }

}
