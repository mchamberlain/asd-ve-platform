/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package MyoushuJava;

public class TimerTaskMessage extends NamedObject_TimerTaskMessage {
  private long swigCPtr;

  public TimerTaskMessage(long cPtr, boolean cMemoryOwn) {
    super(MyoushuJNI.SWIGTimerTaskMessageUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(TimerTaskMessage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      MyoushuJNI.delete_TimerTaskMessage(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public TimerTaskMessage() {
    this(MyoushuJNI.new_TimerTaskMessage__SWIG_0(), true);
  }

  public TimerTaskMessage(TimerTaskMessage.TimerTaskMessageType type, long delta, long absTime) {
    this(MyoushuJNI.new_TimerTaskMessage__SWIG_1(type.swigValue(), delta, absTime), true);
  }

  public String getClassName() {
    return MyoushuJNI.TimerTaskMessage_getClassName(swigCPtr, this);
  }

  public TimerTaskMessage.TimerTaskMessageType getMessageType() {
    return TimerTaskMessage.TimerTaskMessageType.swigToEnum(MyoushuJNI.TimerTaskMessage_getMessageType(swigCPtr, this));
  }

  public void setMessageType(TimerTaskMessage.TimerTaskMessageType type) {
    MyoushuJNI.TimerTaskMessage_setMessageType(swigCPtr, this, type.swigValue());
  }

  public long getAbsTime() {
    return MyoushuJNI.TimerTaskMessage_getAbsTime(swigCPtr, this);
  }

  public void setAbsTime(long absTime) {
    MyoushuJNI.TimerTaskMessage_setAbsTime(swigCPtr, this, absTime);
  }

  public long getDelta() {
    return MyoushuJNI.TimerTaskMessage_getDelta(swigCPtr, this);
  }

  public void setDelta(long delta) {
    MyoushuJNI.TimerTaskMessage_setDelta(swigCPtr, this, delta);
  }

  public void clear() {
    MyoushuJNI.TimerTaskMessage_clear(swigCPtr, this);
  }

  public void clone(TimerTaskMessage dest) {
    MyoushuJNI.TimerTaskMessage_clone(swigCPtr, this, TimerTaskMessage.getCPtr(dest), dest);
  }

  public enum TimerTaskMessageType {
    TM_UPDATE,
    TM_UNKNOWN;

    public final int swigValue() {
      return swigValue;
    }

    public static TimerTaskMessageType swigToEnum(int swigValue) {
      TimerTaskMessageType[] swigValues = TimerTaskMessageType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (TimerTaskMessageType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + TimerTaskMessageType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private TimerTaskMessageType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private TimerTaskMessageType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private TimerTaskMessageType(TimerTaskMessageType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
